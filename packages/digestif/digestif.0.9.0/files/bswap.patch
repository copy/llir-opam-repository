diff --git a/src-c/native/bitfn.h b/src-c/native/bitfn.h
index 8ce6216..6bb4746 100644
--- a/src-c/native/bitfn.h
+++ b/src-c/native/bitfn.h
@@ -46,18 +46,41 @@ static __INLINE void secure_zero_memory(void *v, size_t n)
   memset_v(v, 0, n);
 }
 
+#ifdef __has_builtin
+
+# if __has_builtin(__builtin_bswap32)
+# define ARCH_HAS_SWAP32
+static __INLINE uint32_t bitfn_swap32(uint32_t a)
+{
+  return __builtin_bswap32(a);
+}
+# endif /* __has_builtin(__builtin_bswap32) */
+
+# if __has_builtin(__builtin_bswap64)
+# define ARCH_HAS_SWAP64
+static __INLINE uint64_t bitfn_swap64(uint64_t a)
+{
+  return __builtin_bswap64(a);
+}
+# endif /* __has_builtin(__builtin_bswap64) */
+
+#endif /* __has_builtin */
+
 #ifndef NO_INLINE_ASM
 /**********************************************************/
 # if (defined(__i386__))
-#  define ARCH_HAS_SWAP32
+#  ifndef ARCH_HAS_SWAP32
+#   define ARCH_HAS_SWAP32
 static __INLINE uint32_t bitfn_swap32(uint32_t a)
 {
 	__asm__ ("bswap %0" : "=r" (a) : "0" (a));
 	return a;
 }
+#  endif
 /**********************************************************/
 # elif (defined(__arm__))
-#  define ARCH_HAS_SWAP32
+#  ifndef ARCH_HAS_SWAP32
+#   define ARCH_HAS_SWAP32
 static __INLINE uint32_t bitfn_swap32(uint32_t a)
 {
 	uint32_t tmp = a;
@@ -68,21 +91,28 @@ static __INLINE uint32_t bitfn_swap32(uint32_t a)
 	                  : "=r" (a), "=r" (tmp) : "0" (a), "1" (tmp));
 	return a;
 }
+#endif
 /**********************************************************/
 # elif defined(__x86_64__)
 #  define ARCH_HAS_SWAP32
-#  define ARCH_HAS_SWAP64
+#  ifndef ARCH_HAS_SWAP32
+#   define ARCH_HAS_SWAP32
 static __INLINE uint32_t bitfn_swap32(uint32_t a)
 {
 	__asm__ ("bswap %0" : "=r" (a) : "0" (a));
 	return a;
 }
+#endif
 
+#  define ARCH_HAS_SWAP64
+#  ifndef ARCH_HAS_SWAP64
+#   define ARCH_HAS_SWAP64
 static __INLINE uint64_t bitfn_swap64(uint64_t a)
 {
 	__asm__ ("bswap %0" : "=r" (a) : "0" (a));
 	return a;
 }
+#  endif
 
 # endif
 #endif /* NO_INLINE_ASM */
