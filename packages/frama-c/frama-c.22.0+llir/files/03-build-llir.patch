diff --git a/configure.in b/configure.in
index b98dcfa..c8afab6 100644
--- a/configure.in
+++ b/configure.in
@@ -478,6 +478,8 @@ AC_LANG([C])
 AC_ARG_WITH(cc,[specifies a custom C compiler and pre-processor],[CC=$withval])
 
 AC_PROG_CC
+AC_CHECK_TOOL([RANLIB],[RANLIB])
+AC_CHECK_TOOL([AR],[AR])
 
 AC_CHECK_HEADERS(stdlib.h)
 AC_CHECK_HEADERS(assert.h)
@@ -1052,6 +1054,8 @@ AC_SUBST(DEFAULT_CPP_SUPPORTED_ARCH_OPTS)
 AC_SUBST(FRAMAC_GNU_CPP)
 AC_SUBST(DEFAULT_CPP_KEEP_COMMENTS)
 AC_SUBST(CC)
+AC_SUBST(AR)
+AC_SUBST(RANLIB)
 
 AC_SUBST(EXTERNAL_PLUGINS)
 
diff --git a/ptests/ptests.ml b/ptests/ptests.ml
index 40a4d2d..68ef135 100644
--- a/ptests/ptests.ml
+++ b/ptests/ptests.ml
@@ -24,13 +24,24 @@
      annotated with test options *)
 let default_options = "-journal-disable -check"
 
-let system =
+let system command =
+  let tokens = String.split_on_char ' ' command in
+  let subst_tokens =
+      List.map
+        (fun s ->
+          try
+            if s.[0] = '$' then
+              Unix.getenv (String.sub s 1 (String.length s - 1))
+            else
+              s
+          with Invalid_argument _ -> s)
+        tokens
+  in
+  let command = String.concat " " subst_tokens in
   if Sys.os_type = "Win32" then
-    fun f ->
-      Unix.system (Format.sprintf "bash -c %S" f)
+    Unix.system (Format.sprintf "bash -c %S" command)
   else
-    fun f ->
-      Unix.system f
+    Unix.system command
 
 module Filename = struct
   include Filename
diff --git a/share/Makefile.config.in b/share/Makefile.config.in
index 7c83e35..c386d36 100644
--- a/share/Makefile.config.in
+++ b/share/Makefile.config.in
@@ -53,6 +53,8 @@ FRAMAC_GNU_CPP ?=@FRAMAC_GNU_CPP@
 DEFAULT_CPP_KEEP_COMMENTS?=@DEFAULT_CPP_KEEP_COMMENTS@
 DEFAULT_CPP_SUPPORTED_ARCH_OPTS?=@DEFAULT_CPP_SUPPORTED_ARCH_OPTS@
 CC =@CC@
+AR =@AR@
+RANLIB =@RANLIB@
 
 ###############
 # Ocaml stuff #
diff --git a/src/plugins/e-acsl/Makefile.in b/src/plugins/e-acsl/Makefile.in
index 9991d80..c10304f 100644
--- a/src/plugins/e-acsl/Makefile.in
+++ b/src/plugins/e-acsl/Makefile.in
@@ -306,7 +306,7 @@ $(EACSL_DLMALLOC_LIB): $(EACSL_DLMALLOC_SRC)
 	echo 'AR           $@'
 	$(AR) crus $@ $(EACSL_DLMALLOC_OBJ)
 	echo 'RANLIB       $@'
-	ranlib $@
+	$(RANLIB) $@
 
 all:: $(EACSL_DLMALLOC_LIB)
 
diff --git a/tests/libc/coverage.c b/tests/libc/coverage.c
index 342d79a..d11c8b8 100644
--- a/tests/libc/coverage.c
+++ b/tests/libc/coverage.c
@@ -1,5 +1,5 @@
 /* run.config*
-   OPT: -eva-no-builtins-auto @EVA_OPTIONS@ share/libc/string.c -eva -eva-slevel 6 -metrics-eva-cover -then -metrics-libc
+   OPT: -eva-no-builtins-auto @EVA_OPTIONS@ share/libc/string.c -eva -eva-slevel 6 -load-module frama-c-metrics -metrics-eva-cover -then -metrics-libc
 */
 
 #include "string.h"
diff --git a/tests/libc/fc_libc.c b/tests/libc/fc_libc.c
index 5ad2269..f1b19f8 100644
--- a/tests/libc/fc_libc.c
+++ b/tests/libc/fc_libc.c
@@ -4,7 +4,7 @@
    EXECNOW: make -s @PTEST_DIR@/check_parsing_individual_headers.cmxs
    EXECNOW: make -s @PTEST_DIR@/check_libc_anonymous_tags.cmxs
    EXECNOW: make -s @PTEST_DIR@/check_compliance.cmxs
-   OPT: -load-module @PTEST_DIR@/check_libc_naming_conventions -print -cpp-extra-args='-nostdinc -Ishare/libc' -metrics -metrics-libc -load-module @PTEST_DIR@/check_const -load-module metrics -eva @EVA_CONFIG@ -then -lib-entry -no-print -metrics-no-libc
+   OPT: -load-module @PTEST_DIR@/check_libc_naming_conventions -print -cpp-extra-args='-nostdinc -Ishare/libc' -metrics -metrics-libc -load-module @PTEST_DIR@/check_const -load-module frama-c-metrics -eva @EVA_CONFIG@ -then -lib-entry -no-print -metrics-no-libc
    OPT: -print -print-libc
    OPT: -load-module @PTEST_DIR@/check_parsing_individual_headers
    OPT: -load-module @PTEST_DIR@/check_libc_anonymous_tags
diff --git a/tests/libc/runtime.c b/tests/libc/runtime.c
index 69ea8ad..e1ad171 100644
--- a/tests/libc/runtime.c
+++ b/tests/libc/runtime.c
@@ -1,6 +1,6 @@
 /* run.config*
    COMMENT: tests that the runtime can compile without errors (for PathCrawler, E-ACSL, ...)
-   CMD: gcc -D__FC_MACHDEP_X86_64 share/libc/__fc_runtime.c -Wno-attributes -std=c99 -o /dev/null
+   CMD: $CC -D__FC_MACHDEP_X86_64 share/libc/__fc_runtime.c -Wno-everything -std=c99 -o /dev/null
    OPT:
  */
 
diff --git a/tests/metrics/test_config b/tests/metrics/test_config
index de6ff00..db5c84e 100644
--- a/tests/metrics/test_config
+++ b/tests/metrics/test_config
@@ -1 +1 @@
-OPT: -no-autoload-plugins -load-module metrics,scope -metrics
+OPT: -no-autoload-plugins -load-module frama-c-metrics,scope -metrics
diff --git a/tests/misc/pragma-pack.c b/tests/misc/pragma-pack.c
index 4d81f06..29999b9 100644
--- a/tests/misc/pragma-pack.c
+++ b/tests/misc/pragma-pack.c
@@ -1,6 +1,6 @@
 /*run.config
   STDOPT: #"-machdep gcc_x86_64 -kernel-msg-key typing:pragma"
-  STDOPT: #"-cpp-command=\"gcc -E -C -I. -m32\" -cpp-frama-c-compliant"
+  STDOPT: #"-cpp-command=\"x86_64-unknown-linux-gcc -E -C -I. -m32\" -cpp-frama-c-compliant"
   STDOPT: #"-machdep msvc_x86_64"
  */
 
diff --git a/tests/spec/preprocess_string.c b/tests/spec/preprocess_string.c
index 36ad972..0620098 100644
--- a/tests/spec/preprocess_string.c
+++ b/tests/spec/preprocess_string.c
@@ -1,5 +1,5 @@
 /* run.config
-   STDOPT: +"-cpp-command \"gcc -C -E -I. -Wno-comment\""
+   STDOPT: +"-cpp-command \"x86_64-unknown-linux-gcc -C -E -I. -Wno-comment\""
  */
 
 /*@ ensures "/*"[0] == '/'; */
diff --git a/tests/syntax/bts0519.c b/tests/syntax/bts0519.c
index 9c17131..ab345ed 100644
--- a/tests/syntax/bts0519.c
+++ b/tests/syntax/bts0519.c
@@ -1,6 +1,6 @@
 /* run.config
-   STDOPT: +"-cpp-command='gcc -C -E -I.'" +"-cpp-frama-c-compliant"
-   STDOPT: +"-cpp-command='gcc -C -E -I. -DERR'" +"-cpp-frama-c-compliant"
+   STDOPT: +"-cpp-command='x86_64-unknown-linux-gcc -C -E -I.'" +"-cpp-frama-c-compliant"
+   STDOPT: +"-cpp-command='x86_64-unknown-linux-gcc -C -E -I. -DERR'" +"-cpp-frama-c-compliant"
  */
 
 int t[4];
diff --git a/tests/syntax/preprocessed.ci b/tests/syntax/preprocessed.ci
index 57aaaec..0c6e5a2 100644
--- a/tests/syntax/preprocessed.ci
+++ b/tests/syntax/preprocessed.ci
@@ -1,5 +1,5 @@
 /* run.config
-OPT: -cpp-command="gcc -C -E -DFOO=42" -print
+OPT: -cpp-command="x86_64-unknown-linux-gcc -C -E -DFOO=42" -print
 */
 
 /*@ ensures \result == FOO; */
diff --git a/tests/value/enum2.c b/tests/value/enum2.c
index 9435078..8f7f87a 100644
--- a/tests/value/enum2.c
+++ b/tests/value/enum2.c
@@ -1,6 +1,6 @@
 /* run.config*
   GCC:
-  STDOPT: #"-cpp-frama-c-compliant -cpp-command \"gcc -C -E -I. %1 -o %2\""
+  STDOPT: #"-cpp-frama-c-compliant -cpp-command \"x86_64-unknown-linux-gcc -C -E -I. %1 -o %2\""
 */
 
 /* This test of enums doubles with a test of the % syntax in -cpp-command */
